from sympy import symbols, integrate, lambdify, sin, cos, exp, pi
import numpy as np
import matplotlib.pyplot as plt

#Condiciones iniciales 
#ux(0,y,t) = 0, ux(a,y,t) = 0
#u(x,0,t) = 0, u(x,b,t) = 0
def f(x,y):
    return (x-a)**2+(y-b)**2

    
def onda2D(a, b, itera, k, t):
    x,y = symbols('x y')
    u = 0
    for n in range(1,itera+1):
        u1 = (2/(a*b)) * integrate(f(x,y)* sin(n*pi*y/b),(x,0,a),(y,0,b))*exp(-(n**2/b**2)*pi*2*k*t)*sin(n*pi*y/b)
        u += u1
    for m in range(1,itera+1):
        for n in range(1,itera+1):
            Bmn = (4/(a*b))* integrate(f(x,y)* sin(n*pi*y/b)* cos(m*pi*x/a),(x,0,a),(y,0,b))
            u2 = Bmn*exp(-(m*2/a**2+n**2/b**2)*pi*2*k*t)*sin(n*pi*y/b)*cos(m*pi*x/a)
            u += u2
    funcion = lambdify((x, y),u, 'numpy')
    return funcion

a= 1
b = a
k = 1
t = 0
itera = 5
x = np.linspace(0,a,100)
y = np.linspace(0,b,100)
X, Y = np.meshgrid(x, y)
onda = onda2D(a,b,itera,k,t)
Z = onda


plt.contourf(Z, cmap='viridis')
plt.colorbar()
plt.xlabel('x')
plt.ylabel('y')
plt.title('Onda de calor en t=0')
plt.show()
